####################
# SERVER           #
####################

DEBUG: true
TEST_KEEP_DB: false
DOCS_URL_PREFIX: /requestor

# ignored if already set as an environment variable
ARBORIST_URL:

####################
# DATABASE         #
####################

DB_DRIVER: postgresql
DB_HOST:
DB_PORT:
DB_USER:
DB_PASSWORD:
DB_DATABASE: requestor

DB_POOL_MIN_SIZE: 1
DB_POOL_MAX_SIZE: 16
DB_ECHO: False
DB_SSL:
DB_USE_CONNECTION_FOR_REQUEST: true
DB_RETRY_LIMIT: 1
DB_RETRY_INTERVAL: 1

# set to true to disable requests to Arborist during database migrations;
# useful when migrating a local database or running unit tests
LOCAL_MIGRATION: false

####################
# REQUEST STATUSES #
####################

ALLOWED_REQUEST_STATUSES:
  - DRAFT
  - SUBMITTED
  - APPROVED
  - SIGNED
  - REJECTED

# TODO maybe?
# display_name is optional
# ALLOWED_REQUEST_STATUSES:
#   DRAFT:
#     display_name: Draft
#   SUBMITTED:
#     display_name: Submitted
#   APPROVED:
#     display_name: Approved
#   SIGNED:
#     display_name: Signed
#   REJECTED:
#     display_name: Rejected

# status of new requests when no status is specified by
# the user
DEFAULT_INITIAL_STATUS: DRAFT

# users are not blocked from requesting access again. the same request ID
# would be used but actions (such as redirect) would be triggered again.
DRAFT_STATUSES:
  - DRAFT

# automatically update the user's access. there is no logic to block users
# from requesting access again (this can be done on the client side) or to
# prevent updating access requests - unless also configured as a FINAL_STATUS.
UPDATE_ACCESS_STATUSES:
  - SIGNED

# access requests cannot be updated anymore, but users are not blocked
# from requesting access again. a new request ID would be generated.
FINAL_STATUSES:
  - SIGNED
  - REJECTED

############################
# ACTIONS ON STATUS UPDATE #
############################

REDIRECT_CONFIGS: {}
  # my_redirect:
  #   redirect_url: http://localhost?something
  #   params:
  #     - request_id
  #     - resource_id
  #     - resource_display_name

# only form parameters are supported at the moment. Query, path,
# body, etc parameters could be supported as well in the future
EXTERNAL_CALL_CONFIGS: {}
  # let_someone_know:
  #   method: POST
  #   url: https://abc_system/approve
  #   form:
  #     - name: dataset       # parameter name in the external call
  #       param: resource_id  # internal parameter name (a field from the DB)
  #     - name: username
  #       param: username

# configure actions to trigger when the status of an access
# request for the specified resource path is updated
# /!\ If there are multiple resource_paths in a request's policy,
# only the first "redirect_configs" match is considered
ACTION_ON_UPDATE: {}
  # /resource/with/redirect:
  #   DRAFT:
  #     redirect_configs:
  #       - my_redirect
  #     external_call_configs:
  #       - let_someone_know
