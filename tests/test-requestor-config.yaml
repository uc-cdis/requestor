####################
# SERVER           #
####################

DEBUG: true
TEST_KEEP_DB: false
DOCS_URL_PREFIX: /

####################
# DATABASE         #
####################

# These are required for automated testing (see .github/workflows/ci.yaml)
DB_DRIVER: postgresql
DB_HOST: localhost
DB_PORT: 5432
DB_USER: postgres
DB_PASSWORD: postgres
DB_DATABASE: requestor_test

LOCAL_MIGRATION: true

####################
# REQUEST STATUSES #
####################

ALLOWED_REQUEST_STATUSES:
  - CREATED
  - INTERMEDIATE_STATUS
  - APPROVED
  - CANCELLED
DEFAULT_INITIAL_STATUS: CREATED
DRAFT_STATUSES:
  - CREATED
UPDATE_ACCESS_STATUSES:
  - APPROVED
FINAL_STATUSES:
  - CANCELLED

############################
# ACTIONS ON STATUS UPDATE #
############################

DEFAULT_MAX_RETRIES: 2

REDIRECT_CONFIGS:
  my_redirect:
    redirect_url: http://localhost?something
    params:
      - request_id
      - resource_id
      - resource_display_name

EXTERNAL_CALL_CONFIGS:
  let_abc_system_know:
    method: POST
    url: https://abc_system/access
    form:
      - name: dataset
        param: resource_id
      - name: username
        param: username
  let_xyz_system_know:
    method: GET
    url: https://xyz_system/access
  let_xyz_system_know_with_creds:
    method: GET
    url: https://xyz_system/access
    creds: client_creds_for_external_call

ACTION_ON_UPDATE:
  /resource-with-redirect:
    CREATED:
      redirect_configs:
        - my_redirect
  /resource-with-external-calls:
    APPROVED:
      external_call_configs:
        - let_abc_system_know
        - let_xyz_system_know
  /resource-with-authed-external-call:
    CREATED:
      external_call_configs:
        - let_xyz_system_know_with_creds
  /resource-with-redirect-and-external-call:
    CREATED:
      redirect_configs:
        - my_redirect
      external_call_configs:
        - let_abc_system_know

CREDENTIALS:
  client_creds_for_external_call:
    type: client_credentials
    config:
      client_id: abc
      client_secret: xyz
      url: https://xyz_system/oauth2/token
      scope: "scope1 scope2"
